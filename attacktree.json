{
    "Version": 1,
    "Timestamp": "2024-07-09T09:58:27.388726714Z",
    "Root": "A0",
    "NodeMap": {
        "A0": {
            "ID": "A0",
            "Title": "Report Processing Service",
            "Description": "Report Processing Service processes the bed occupancy report by usage of other micro services. Report Processing Service enhances the Fast Healthcare Interoperability Resources bundle.",
            "Flagged": false,
            "AndOperator": false,
            "Parent": "",
            "Children": [
                "A2",
                "A3",
                "A4",
                "A5"
            ],
            "Referrers": null,
            "References": null,
            "Impact": 3,
            "ImpactSubclasses": null,
            "ThreatActor": 4,
            "Complexity": 2,
            "STRIDE": 0,
            "Controls": null,
            "OutOfScope": false
        },
        "A2": {
            "ID": "A2",
            "Title": "Manipulate Bed Occupancy Reports",
            "Description": "An attacker could aim to manipulate the bed occupancy reports processed by the service. By altering this data, the attacker could disrupt hospital operations, leading to overbooking or underutilization of hospital beds. This can severely impact patient care and hospital efficiency, potentially causing delays in treatment or misallocation of resources or also manipulate or change healthcare data such as bed occupancy reports which can be used negatively for political reason.",
            "Flagged": false,
            "AndOperator": false,
            "Parent": "A0",
            "Children": null,
            "Referrers": null,
            "References": null,
            "Impact": 3,
            "ImpactSubclasses": null,
            "ThreatActor": 4,
            "Complexity": 2,
            "STRIDE": 2,
            "Controls": {
                "C24": 3,
                "C25": 3,
                "C26": 3,
                "C27": 3,
                "C28": 2
            },
            "OutOfScope": false
        },
        "A3": {
            "ID": "A3",
            "Title": "Disrupt Service Availability",
            "Description": "An attacker might attempt to disrupt the availability of the Report Processing Service through a denial-of-service (DoS) attack or by exploiting vulnerabilities in the microservices architecture. Such disruptions can prevent healthcare providers from accessing critical bed occupancy information, leading to operational delays and compromised patient care.",
            "Flagged": false,
            "AndOperator": false,
            "Parent": "A0",
            "Children": null,
            "Referrers": null,
            "References": null,
            "Impact": 3,
            "ImpactSubclasses": null,
            "ThreatActor": 4,
            "Complexity": 2,
            "STRIDE": 5,
            "Controls": {
                "C14": 3,
                "C15": 3,
                "C16": 2,
                "C17": 3,
                "C18": 3,
                "C9": 3
            },
            "OutOfScope": false
        },
        "A4": {
            "ID": "A4",
            "Title": "Inject Malicious Data or Code",
            "Description": "An attacker could aim to inject malicious data or code into the Report Processing Service or its associated microservices. This could lead to the execution of unauthorized commands, data corruption, or the spread of malware within the healthcare network. Such attacks can compromise the integrity of the data and the security of the entire healthcare IT infrastructure.",
            "Flagged": false,
            "AndOperator": false,
            "Parent": "A0",
            "Children": null,
            "Referrers": null,
            "References": null,
            "Impact": 4,
            "ImpactSubclasses": null,
            "ThreatActor": 4,
            "Complexity": 2,
            "STRIDE": 2,
            "Controls": {
                "C10": 2,
                "C11": 2,
                "C12": 3,
                "C13": 3,
                "C8": 3,
                "C9": 3
            },
            "OutOfScope": false
        },
        "A5": {
            "ID": "A5",
            "Title": "Gain Unauthorized Access to Microservices",
            "Description": "An attacker might try to gain unauthorized access to the microservices that the Report Processing Service relies on. By compromising these microservices, the attacker could manipulate or disrupt the data flow, leading to inaccurate reports or service outages. This could have a cascading effect, impacting other dependent systems and services within the healthcare organization.",
            "Flagged": false,
            "AndOperator": false,
            "Parent": "A0",
            "Children": null,
            "Referrers": null,
            "References": null,
            "Impact": 3,
            "ImpactSubclasses": null,
            "ThreatActor": 4,
            "Complexity": 2,
            "STRIDE": 6,
            "Controls": {
                "C19": 2,
                "C20": 3,
                "C21": 3,
                "C22": 3,
                "C23": 3,
                "C4": 3,
                "C6": 3,
                "C7": 2
            },
            "OutOfScope": false
        }
    },
    "NodeHighestID": 5,
    "ControlMap": {
        "C1": {
            "Status": 3,
            "Effort": 3,
            "Nature": 0,
            "Kind": 4,
            "Ticket": "",
            "Friction": 0,
            "ID": "C1",
            "Title": "Data Encryption at REST and in Transit",
            "Description": "Encrypt sensitive healthcare data both at rest and in transit using strong encryption algorithms. This ensures that even if an attacker gains access to the data, they cannot easily read or use it without the decryption keys.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C10": {
            "Status": 3,
            "Effort": 3,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C10",
            "Title": "Regular Security Testing",
            "Description": "Conduct regular security testing, including penetration testing and vulnerability assessments, to identify and address potential injection vulnerabilities in the Report Processing Service and its microservices.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C11": {
            "Status": 3,
            "Effort": 2,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C11",
            "Title": "Logging and Monitoring",
            "Description": "Implement comprehensive logging and monitoring to detect and respond to suspicious activities, such as attempts to inject malicious data or code. This includes monitoring application logs, network traffic, and user activities.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C12": {
            "Status": 3,
            "Effort": 2,
            "Nature": 2,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C12",
            "Title": "Antivirus Software",
            "Description": "1. **Research:** Research and select an antivirus software that is compatible with your operating system and meets your needs.\n2. **Installation:** Install the software onto your system following the instructions provided.\n3. **Scanning:** Run a full system scan to identify any potential threats.\n4. **Updates:** Set the software to automatically update to ensure that the most recent virus definitions are being used.\n5. **Monitoring:** Monitor the system to ensure that the antivirus software is running correctly and all threats are being identified and removed.",
            "Flagged": false,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Ensure the antivirus software is up-to-date and scanning regularly.\n- Verify the antivirus software is configured to protect against the latest threats.\n- Test the software from outside the network to ensure it is working as expected (for example via EICAR test files).\n- Monitor logs for events related to the antivirus software.\n- Schedule periodic scans for all systems and networks.\n- Analyze the results of the scans to ensure no malicious software is present.\n",
            "Requirements": null
        },
        "C13": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 0,
            "Ticket": "",
            "Friction": 0,
            "ID": "C13",
            "Title": "Code Security Scans (SAST)",
            "Description": "Secure Code Scans (SAST) is a process that scans source code for security vulnerabilities and coding errors. It is an important security control for any application development process: \n1. **Set up a secure development environment**: Establish secure procedures for the development, testing, and deployment of code.\n2. **Identify coding standards**: Establish coding standards that are specific to the organization or project.\n3. **Develop a secure coding policy**: Establish a policy that outlines the steps that must be taken to ensure secure coding practices.\n4. **Use a static code analysis tool**: Use a static code analysis tool to scan the source code for any security vulnerabilities and coding errors.\n5. **Review the results**: Review the results of the scan and determine which vulnerabilities and coding errors need to be addressed.\n6. **Resolve and retest**: Resolve any identified issues and retest the code to ensure that they were properly addressed.\n7. **Document and maintain**: Document the process and maintain it over time to ensure that any changes to the code are properly scanned.\n\nSome OpenSource SAST tools include:\n  - [Find Security Bugs (Java, Kotlin, Groovy, Scala)](https://find-sec-bugs.github.io/)\n  - [Security Code Scan (.NET, C#, ASP)](https://security-code-scan.github.io/)\n  - [GoSec (Go)](https://github.com/securego/gosec)\n  - [Brakeman (Ruby)](https://brakemanscanner.org/)\n  - [Bandit (Python)](https://pypi.org/project/bandit/)\n  - [NodeJsScan (Node.js)](https://github.com/ajinabraham/nodejsscan)\n  - [PHP CS Security Audit (PHP)](https://github.com/FloeDesignTechnologies/phpcs-security-audit)\n  - [Semgrep](https://semgrep.dev/)",
            "Flagged": false,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Ensure that all code is scanned.\n- Compare the results of the scans with the security requirements.\n- Review the results of the scans for accuracy and completeness.\n- Follow up on any reported issues to ensure they are addressed.\n",
            "Requirements": null
        },
        "C14": {
            "Status": 3,
            "Effort": 3,
            "Nature": 4,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C14",
            "Title": "Load Balancing and Auto-Scaling",
            "Description": "Deploy load balancing and auto-scaling solutions to distribute incoming traffic across multiple instances of the Report Processing Service. This ensures that the service can handle increased load and maintain availability during high traffic periods or DoS attacks.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C15": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C15",
            "Title": "Regular Vulnerability Scanning and Patching",
            "Description": "Conduct regular vulnerability scanning and apply patches to the Report Processing Service and its underlying infrastructure. This helps to identify and remediate vulnerabilities that could be exploited to disrupt service availability.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C16": {
            "Status": 3,
            "Effort": 3,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C16",
            "Title": "Service Monitoring and Incident Response",
            "Description": "Implement continuous monitoring of the Report Processing Service to detect anomalies and potential DoS attacks. Establish an incident response plan to quickly address and mitigate any disruptions to service availability.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C17": {
            "Status": 3,
            "Effort": 3,
            "Nature": 0,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C17",
            "Title": "DDoS Protection",
            "Description": "Distributed Denial of Service (DDoS) attacks are a type of cyber attack which flood a targeted system with an overwhelming amount of traffic. The goal is to overload the system and prevent it from functioning normally.\nIn order to protect against these types of attacks, organizations should implement the following measures:\n1. **Network Monitoring**: Establish a system for monitoring network traffic to detect any suspicious or unexpected spikes in traffic.\n2. **Traffic Shaping**: Implement traffic shaping techniques to limit the amount of traffic that can be sent to a particular system or network.\n3. **Rate Limiting**: Establish rate limits to prevent any single system from sending too much traffic at once.\n4. **IP Blocking**: Block any IP addresses or ranges known to be associated with DDoS attacks.\n5. **Load Balancing**: Use load balancing techniques to spread traffic across multiple systems, making it more difficult for attackers to overwhelm a single system.\n6. **Web Application Firewall**: Deploy a web application firewall (WAF) to filter out malicious requests and protect against application-level attacks.\n7. **Cloud-based Solutions**: Leverage cloud-based solutions such as Cloudflare or Akamai to absorb and mitigate DDoS attacks.",
            "Flagged": false,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Use network scanning tools to scan for common DDoS attack vectors.\n- Simulate a DDoS attack using a test environment (if possible).\n- Monitor the performance of the system before, during, and after a simulated attack.\n",
            "Requirements": null
        },
        "C18": {
            "Status": 3,
            "Effort": 1,
            "Nature": 3,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C18",
            "Title": "Backup and Recovery",
            "Description": "1. **Establish a backup plan**: Determine the frequency, location, and types of data that need to be backed up. \n2. **Set up the backup system**: Install backup software, configure the settings, and schedule the backups.\n3. **Perform regular backups**: Monitor the backup system to ensure that the backups are running as scheduled.\n4. **Store the backups securely**: Encrypt and store the backups in a secure, off-site location, such as a cloud storage solution.\n5. **Test the backups**: Periodically test the backups to make sure they are recoverable.\n6. **Monitor the system**: Monitor the system for any suspicious activity, such as unauthorized access attempts or ransomware attempts.",
            "Flagged": false,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Verify that backups are being taken regularly and stored securely.\n- Verify that backups are encrypted.\n- Verify that backups are tested periodically to ensure they can be restored.\n- Verify that there is a documented process for recovering from a successful ransomware attack.\n- Verify that the process includes restoring from a backup as well as other steps such as malware removal, ensuring security patches are up to date, etc.\n",
            "Requirements": null
        },
        "C19": {
            "Status": 3,
            "Effort": 1,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C19",
            "Title": "Security Unit-Tests Checking for Access Restrictions",
            "Description": "This security control involves the use of unit tests to check for access restrictions within an application or system. This is done by creating test cases that attempt to access resources or perform actions that should be restricted to certain users or roles. The unit tests are designed to ensure that access restrictions are enforced properly and that unauthorized access is prevented.\n\nThe purpose of this control is to identify and prevent security vulnerabilities related to access control. By using unit tests to check for access restrictions, developers can ensure that their code is secure and that access is limited to authorized users. This can help to prevent unauthorized access to sensitive data or systems, and reduce the risk of data breaches or other security incidents.\n\nOverall, Security Unit-Tests Checking for Access Restrictions is an important security control that can help to ensure the security and integrity of an application or system. By incorporating this control into the development process, organizations can reduce the risk of security incidents and protect their sensitive data and systems.",
            "Flagged": false,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Define the scope of the security unit tests and access restrictions to be checked.\n- Develop test cases to validate the implementation of access restrictions by testing to access resources without having the sufficient permissions and expecting access being denied.\n- Test the application or system with the security unit tests to ensure access restrictions are properly enforced.\n",
            "Requirements": null
        },
        "C2": {
            "Status": 3,
            "Effort": 3,
            "Nature": 4,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C2",
            "Title": "Data Loss Prevention (DLP) Solutions",
            "Description": "Deploy Data Loss Prevention (DLP) solutions to monitor, detect, and prevent unauthorized attempts to access or exfiltrate sensitive healthcare data. DLP tools can help enforce data handling policies and prevent data breaches.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C20": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C20",
            "Title": "Implement Strong Authentication and Authorization",
            "Description": "Ensure that all microservices require strong authentication and authorization mechanisms. Use OAuth2 or OpenID Connect for token-based authentication and enforce role-based access control (RBAC) to limit access to only authorized users and services.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C21": {
            "Status": 3,
            "Effort": 1,
            "Nature": 0,
            "Kind": 4,
            "Ticket": "",
            "Friction": 0,
            "ID": "C21",
            "Title": "Encrypt Data in Transit",
            "Description": "Use TLS/SSL to encrypt all data transmitted between microservices to protect against eavesdropping and man-in-the-middle attacks. Ensure that certificates are properly managed and rotated regularly.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C22": {
            "Status": 3,
            "Effort": 3,
            "Nature": 0,
            "Kind": 4,
            "Ticket": "",
            "Friction": 0,
            "ID": "C22",
            "Title": "Network Segmentation and Microservice Isolation",
            "Description": "Implement network segmentation to isolate microservices from each other and from other parts of the network. Use service meshes or network policies to enforce strict communication rules between microservices.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C23": {
            "Status": 3,
            "Effort": 2,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C23",
            "Title": "Continuous Monitoring and Logging",
            "Description": "Implement continuous monitoring and logging of all microservice interactions. Use centralized logging and monitoring solutions to detect and respond to suspicious activities in real-time.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C24": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C24",
            "Title": "Data Integrity Checks",
            "Description": "Implement integrity checks to ensure that the bed occupancy data remains unaltered during processing. This can include cryptographic hashing and digital signatures to verify the authenticity and integrity of the data.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C25": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C25",
            "Title": "Access Controls and Authentication",
            "Description": "Enforce strict access controls and authentication mechanisms to ensure that only authorized personnel and services can access and modify bed occupancy reports. This includes using multi-factor authentication and role-based access controls.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C26": {
            "Status": 3,
            "Effort": 2,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C26",
            "Title": "Audit Logging and Monitoring",
            "Description": "Implement comprehensive audit logging and monitoring to track any access or modification of bed occupancy reports. This helps in detecting unauthorized changes and provides a trail for forensic analysis.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C27": {
            "Status": 3,
            "Effort": 3,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C27",
            "Title": "Data Encryption",
            "Description": "Encrypt bed occupancy data both in transit and at rest to protect it from unauthorized access and tampering. Use strong encryption standards to ensure data confidentiality and integrity.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C28": {
            "Status": 3,
            "Effort": 1,
            "Nature": 3,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C28",
            "Title": "Redundancy and Backup",
            "Description": "Maintain redundant copies and backups of bed occupancy reports to ensure data availability and integrity. Regularly test backup and recovery procedures to ensure data can be restored accurately in case of tampering or loss.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C3": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C3",
            "Title": "Access Control and Authentication",
            "Description": "Implement robust access control mechanisms and multi-factor authentication (MFA) to ensure that only authorized users can access the Report Processing Service and sensitive healthcare data. This includes role-based access control (RBAC) and least privilege principles.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C4": {
            "Status": 3,
            "Effort": 3,
            "Nature": 1,
            "Kind": 0,
            "Ticket": "",
            "Friction": 0,
            "ID": "C4",
            "Title": "Regular Security Audits and Penetration Testing",
            "Description": "Conduct regular security audits and penetration testing on the Report Processing Service and associated microservices to identify and remediate vulnerabilities that could be exploited to access sensitive healthcare data.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C5": {
            "Status": 3,
            "Effort": 2,
            "Nature": 1,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C5",
            "Title": "Intrusion Detection and Monitoring",
            "Description": "Implement intrusion detection systems (IDS) and continuous monitoring to detect and respond to suspicious activities and potential breaches in real-time. This includes monitoring access logs, network traffic, and user behavior analytics.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C6": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C6",
            "Title": "Role-Based Access Control (RBAC)",
            "Description": "Role-Based Access Control (RBAC) is a security control that restricts system access to authorized users based on their assigned roles and responsibilities. RBAC assigns users to roles that define the permissions and access levels they are allowed to perform within a system or application. This control helps to ensure that users only have access to the resources they need to perform their jobs and prevents unauthorized access to sensitive data or systems. RBAC also simplifies the management of access privileges by allowing administrators to manage permissions at the role level rather than at the individual user level.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Conduct a review of the design documents to ensure that the RBAC model is properly implemented.\n- Test the RBAC model by creating test accounts with different roles and permissions and verifying that the accounts can only access the resources they are authorized to access.\n- Conduct penetration testing to identify any vulnerabilities in the RBAC implementation.\n- Perform audits to ensure that RBAC policies are being enforced and that there are no deviations.\n- Monitor system logs to detect any unauthorized access attempts or suspicious activity.\n- Conduct regular reviews of RBAC policies to ensure that they are up-to-date and relevant.\n",
            "Requirements": null
        },
        "C7": {
            "Status": 3,
            "Effort": 1,
            "Nature": 4,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C7",
            "Title": "Random External Keys (UUIDs)",
            "Description": "Random External Keys (for example via UUIDs), are a security control used to prevent unauthorized access to data by making the keys not enumerable.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "- Verify that the externally (e.g. via APIs) exposed and referenced keys are not enumerable, preferably UUIDs.\n- Verify that the implementation uses a cryptographically secure random number generator (RNG) to generate the UUIDs.\n",
            "Requirements": null
        },
        "C8": {
            "Status": 3,
            "Effort": 2,
            "Nature": 0,
            "Kind": 3,
            "Ticket": "",
            "Friction": 0,
            "ID": "C8",
            "Title": "Secure Coding Practices",
            "Description": "Adopt secure coding practices, such as avoiding the use of unsafe functions and libraries, to minimize the risk of code injection vulnerabilities. Regular code reviews and static code analysis tools should be used to identify and remediate potential security issues.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        },
        "C9": {
            "Status": 3,
            "Effort": 3,
            "Nature": 4,
            "Kind": 2,
            "Ticket": "",
            "Friction": 0,
            "ID": "C9",
            "Title": "Web Application Firewall (WAF)",
            "Description": "Deploy a Web Application Firewall (WAF) to inspect and filter incoming traffic to the Report Processing Service. The WAF can detect and block malicious payloads, protecting the service from injection attacks.",
            "Flagged": true,
            "Result": "",
            "CheckTime": 0,
            "Validation": "",
            "Requirements": null
        }
    },
    "ControlHighestID": 28,
    "Actors": {
        "DefaultActor": 4,
        "DefaultComplexity": 2,
        "ImpactSubclass1": "Confidentiality",
        "ImpactSubclass2": "Integrity",
        "ImpactSubclass3": "Availability",
        "ImpactSubclass4": "Safety",
        "ImpactSubclass5": "Reputational",
        "ImpactSubclass6": "Financial",
        "ImpactSubclass7": "Compliance",
        "ImpactSubclass8": "Customer",
        "RiskOfLikelihood0AndImpact0": 0,
        "RiskOfLikelihood0AndImpact1": 0,
        "RiskOfLikelihood0AndImpact2": 0,
        "RiskOfLikelihood0AndImpact3": 0,
        "RiskOfLikelihood0AndImpact4": 1,
        "RiskOfLikelihood1AndImpact0": 0,
        "RiskOfLikelihood1AndImpact1": 0,
        "RiskOfLikelihood1AndImpact2": 1,
        "RiskOfLikelihood1AndImpact3": 1,
        "RiskOfLikelihood1AndImpact4": 2,
        "RiskOfLikelihood2AndImpact0": 1,
        "RiskOfLikelihood2AndImpact1": 1,
        "RiskOfLikelihood2AndImpact2": 2,
        "RiskOfLikelihood2AndImpact3": 2,
        "RiskOfLikelihood2AndImpact4": 3,
        "RiskOfLikelihood3AndImpact0": 1,
        "RiskOfLikelihood3AndImpact1": 2,
        "RiskOfLikelihood3AndImpact2": 3,
        "RiskOfLikelihood3AndImpact3": 3,
        "RiskOfLikelihood3AndImpact4": 4,
        "RiskOfLikelihood4AndImpact0": 2,
        "RiskOfLikelihood4AndImpact1": 3,
        "RiskOfLikelihood4AndImpact2": 3,
        "RiskOfLikelihood4AndImpact3": 4,
        "RiskOfLikelihood4AndImpact4": 5,
        "RiskOfLikelihood5AndImpact0": 2,
        "RiskOfLikelihood5AndImpact1": 3,
        "RiskOfLikelihood5AndImpact2": 4,
        "RiskOfLikelihood5AndImpact3": 5,
        "RiskOfLikelihood5AndImpact4": 5,
        "WeightOfEffectVeryHigh": 87,
        "WeightOfEffectHigh": 60,
        "WeightOfEffectMedium": 14,
        "WeightOfEffectLow": 6,
        "WeightOfEffectVeryLow": 2,
        "ThresholdOfLikelihoodVeryLikely": 7500,
        "ThresholdOfLikelihoodLikely": 4000,
        "ThresholdOfLikelihoodPossible": 1625,
        "ThresholdOfLikelihoodUnlikely": 65,
        "ThresholdOfLikelihoodVeryUnlikely": 1,
        "FeasibilityOfComplexityVerySimple": 100,
        "FeasibilityOfComplexitySimple": 75,
        "FeasibilityOfComplexityOrdinary": 50,
        "FeasibilityOfComplexityComplex": 25,
        "FeasibilityOfComplexityVeryComplex": 1,
        "Actor6Occurrence": 100,
        "Actor5Occurrence": 80,
        "Actor4Occurrence": 65,
        "Actor3Occurrence": 48,
        "Actor2Occurrence": 32,
        "Actor1Occurrence": 17,
        "Actor0Occurrence": 1,
        "Actor6Title": "",
        "Actor5Title": "",
        "Actor4Title": "",
        "Actor3Title": "",
        "Actor2Title": "",
        "Actor1Title": "",
        "Actor0Title": "",
        "Actor6Description": "",
        "Actor5Description": "",
        "Actor4Description": "",
        "Actor3Description": "",
        "Actor2Description": "",
        "Actor1Description": "",
        "Actor0Description": ""
    },
    "Report": {
        "Company": "",
        "Author": "",
        "Domain": "",
        "Logo": "",
        "TicketSystem": "",
        "Language": "en",
        "Scope": "",
        "Summary": "",
        "RiskCurrent": "",
        "RiskSimulatedShortTerm": "",
        "RiskSimulatedMediumTerm": "",
        "TimelineShortTerm": "",
        "TimelineMediumTerm": ""
    },
    "QuestionMap": {},
    "QuestionHighestID": 0,
    "WizardMap": null,
    "WizardApplied": false,
    "Changelog": null
}